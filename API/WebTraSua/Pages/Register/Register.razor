@page "/register"
@layout EmptyLayout
@inject NavigationManager nv

<body>
    <header>
        <!-- place navbar here -->
    </header>
    <main>
        <div class="wrapper">
            <EditForm Model="registerData" FormName="register" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit">
                <h1>Đăng Ký</h1>
                <div class="input-box">
                    <InputText type="text" @bind-Value="registerData.Name" placeholder="Họ và tên" /> <i class='bx bx-rename'></i>
                    <ValidationMessage For="()=>registerData.Name"></ValidationMessage>
                </div>
                <div class="input-box">
                    <InputText type="text" @bind-Value="registerData.UserName" placeholder="Tên đăng nhập" /> <i class='bx bx-child'></i>
                    <ValidationMessage For="()=>registerData.UserName"></ValidationMessage>
                </div>
                <div class="input-box">
                    <InputText type="password" @bind-Value="registerData.PassWord" placeholder="Mật khẩu" /> <i class='bx bxs-lock-alt'></i>
                    <ValidationMessage For="()=>registerData.PassWord"></ValidationMessage>
                </div>
                @*   <div class="input-box">
                <InputText type="password" placeholder="Nhập lại mật khẩu" /> <i class='bx bxs-lock'></i>
                </div> *@
                <button type="submit" class="btn">Đăng ký</button>

                <div class="register-link">
                    <label> <input type="checkbox"> Tôi chấp nhận điều khoản </label>
                    <a href="#"></a>
                </div>
            </EditForm>
        </div>
    </main>
    <footer>
        <!-- place footer here -->
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"
            integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+"
            crossorigin="anonymous"></script>
</body>

@code {
    string url = "http://localhost:20714/api/Users";

    public User registerData = new User();
    User recievedRegister;

    public string FormSubmitMessage { get; set; } = null;

    public async Task HandleValidSubmit()
    {
        recievedRegister = new User();
        using (var httpClient = new HttpClient())
        {
            StringContent content = new StringContent(JsonConvert.SerializeObject(registerData), Encoding.UTF8, "application/json");

            using (var response = await httpClient.PostAsync(url, content))
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
                recievedRegister = JsonConvert.DeserializeObject<User>(apiResponse);
            }
        }
        FormSubmitMessage = "Đăng ký thành công";
    }

    public void HandleInvalidSubmit() => FormSubmitMessage = "Đăng ký thất bại";
}
