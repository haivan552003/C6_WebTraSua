@page "/details/{ProductID:int}"
@inject NavigationManager nv;
@inject HttpClient httpClient;

<!doctype html>
<html lang="en">

<head>
    <title>Title</title>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />

    <!-- Bootstrap CSS v5.2.1 -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous" />
    <link rel="stylesheet" href="style.css">
    <!-- FontAwesome 6.2.0 CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css"
          integrity="sha512-xh6O/CkQoPOWDdYTDqeRdPCVd1SpvCA9XXcUnZS2FmJNp1coAFzvtCN9BmamE+4aHK8yyUHUSCcJHgXloTyT2A=="
          crossorigin="anonymous" referrerpolicy="no-referrer" />

    <!-- (Optional) Use CSS or JS implementation -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/js/all.min.js"
            integrity="sha512-naukR7I+Nk6gp7p5TMA4ycgfxaZBJ7MO5iC3Fp6ySQyKFHOGfpkSZkYVWV5R7u7cfAicxanwYQ5D1e17EfJcMA=="
            crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <style>
        .nav-hover:hover {
            transform: scale(1.5);
            transition: all .3s ease-in-out;
            font-weight: bold;
        }

        .btn-size {
            width: 50px;
            height: 50px;
            background-color: white;
            padding: 10px;
            margin: 0px 0px 30px 20px;
            border: 2px solid transparent;
        }

            .btn-size:hover {
                border-color: rgb(239, 159, 56);
            }

        .quantity-control {
            display: flex;
            align-items: center;
        }

            .quantity-control button {
                border: none;
                background: none;
                font-size: 1.5rem;
                padding: 0 10px;
            }

            .quantity-control input {
                width: 50px;
                text-align: center;
                border: none;
                background: none;
                font-size: 1rem;
            }

        /* button black */
        .btn-black {
            background-color: black;
            color: white;
            font-size: 14px;
            font-weight: 700;
            padding-top: 18px;
            padding-bottom: 18px;
            border: none;
            border-radius: 0;
        }

        .btn-black {
            background-color: black;
            color: white;
            font-size: 14px;
            font-weight: 700;
            padding-top: 18px;
            padding-bottom: 18px;
            border: 2px solid black;
            border-radius: 0;
        }

            .btn-black:hover {
                background-color: white;
                color: black;
                font-size: 14px;
                font-weight: 700;
                padding-top: 18px;
                padding-bottom: 18px;
                border: 2px solid black;
                border-radius: 0;
            }

        .info-section {
            background-color: #f7f7f7;
            padding: 20px;
            margin-top: 20px;
        }

            .info-section h3 {
                margin-bottom: 20px;
            }

            .info-section .icon-text {
                display: flex;
                align-items: center;
                margin-bottom: 10px;
            }

                .info-section .icon-text i {
                    margin-right: 10px;
                    font-size: 1.5rem;
                }

            .info-section hr {
                margin: 0.5rem 0;
            }

        .same-product {
            text-align: center;
            margin: 40px 0 20px;
        }

        .secondary-img {
            margin-top: 10px;
            border-radius: 10px;
        }

        .main-image {
            border-radius: 10px;
        }

        .card-prodcut-same {
            border: none;
        }

        body {
            font-family: 'Roboto';
        }

        /* font */
        .roboto-thin {
            font-family: "Roboto", sans-serif;
            font-weight: 100;
            font-style: normal;
        }

        .roboto-light {
            font-family: "Roboto", sans-serif;
            font-weight: 300;
            font-style: normal;
        }

        .roboto-regular {
            font-family: "Roboto", sans-serif;
            font-weight: 400;
            font-style: normal;
        }

        .roboto-medium {
            font-family: "Roboto", sans-serif;
            font-weight: 500;
            font-style: normal;
        }

        .roboto-bold {
            font-family: "Roboto", sans-serif;
            font-weight: 700;
            font-style: normal;
        }

        .roboto-black {
            font-family: "Roboto", sans-serif;
            font-weight: 900;
            font-style: normal;
        }

        .roboto-thin-italic {
            font-family: "Roboto", sans-serif;
            font-weight: 100;
            font-style: italic;
        }

        .roboto-light-italic {
            font-family: "Roboto", sans-serif;
            font-weight: 300;
            font-style: italic;
        }

        .roboto-regular-italic {
            font-family: "Roboto", sans-serif;
            font-weight: 400;
            font-style: italic;
        }

        .roboto-medium-italic {
            font-family: "Roboto", sans-serif;
            font-weight: 500;
            font-style: italic;
        }

        .roboto-bold-italic {
            font-family: "Roboto", sans-serif;
            font-weight: 700;
            font-style: italic;
        }

        .roboto-black-italic {
            font-family: "Roboto", sans-serif;
            font-weight: 900;
            font-style: italic;
        }

        /* fix-container-fluid */
        .container-fluid-custom {
            --bs-gutter-x: 1.5rem;
            --bs-gutter-y: 0;
            width: 100%;
            margin-right: auto;
            margin-left: auto;
        }

        /* font-size */
        .fs-16 {
            font-size: 16px;
        }

        .fs-12 {
            font-size: 12px;
        }

        .fs-52 {
            font-size: 52px;
        }

        .fs-18 {
            font-size: 18px;
        }

        .fs-20 {
            font-size: 20px;
        }

        .fs-24 {
            font-size: 24px;
        }

        /* margin */
        .me-75 {
            margin-right: 75px;
        }

        .mb-72 {
            margin-bottom: 72px;
        }

        .mt-36 {
            margin-top: 36px;
        }
    </style>

</head>

<body>
    <header>
        <!-- place navbar here -->
    </header>
    <main>
        <div class="container">
            <div class="row">
                <div class="col-md-1">
                </div>
                <div class="col-md-10">
                    <div class="path">
                        <h5>Home/Product/ProductDetail</h5>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <!-- product image -->
                            @if (product?.Image != null && product.Image.Any())
                            {
                                // Lọc hình ảnh có productID chung
                                var imagesForProduct = product.Image.Where(img => img.ProductID == product.ProductID).ToList();

                                if (imagesForProduct.Any())
                                {
                                    <img id="mainImage" src="@imagesForProduct.First().Name" class="img-fluid h-75 w-100 main-image" />

                                    <div class="row secondary">
                                        @foreach (var image in imagesForProduct.Take(4))
                                        {
                                            <div class="col-md-3">
                                                <img src="@image.Name" class="img-fluid h-100 w-100 secondary-img" onclick="changeMainImage('@image.Name')" />
                                            </div>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <img id="mainImage" src="meo.jpg" class="img-fluid h-75 w-100 main-image" />
                                    <div class="row secondary">
                                        <div class="col-md-3">
                                            <img src="meo.jpg" class="img-fluid h-75 w-100 secondary-img" onclick="changeMainImage('meo.jpg')" />
                                        </div>
                                        <div class="col-md-3">
                                            <img src="meo.jpg" class="img-fluid h-75 w-100 secondary-img" onclick="changeMainImage('meo.jpg')" />
                                        </div>
                                        <div class="col-md-3">
                                            <img src="meo.jpg" class="img-fluid h-75 w-100 secondary-img" onclick="changeMainImage('meo.jpg')" />
                                        </div>
                                        <div class="col-md-3">
                                            <img src="meo.jpg" class="img-fluid h-75 w-100 secondary-img" onclick="changeMainImage('meo.jpg')" />
                                        </div>
                                    </div>
                                }
                            }
                            else
                            {
                                <img id="mainImage" src="meo.jpg" class="img-fluid h-75 w-100 main-image" />
                                <div class="row secondary">
                                    <div class="col-md-3">
                                        <img src="meo.jpg" class="img-fluid h-75 w-100 secondary-img" onclick="changeMainImage('meo.jpg')" />
                                    </div>
                                    <div class="col-md-3">
                                        <img src="meo.jpg" class="img-fluid h-75 w-100 secondary-img" onclick="changeMainImage('meo.jpg')" />
                                    </div>
                                    <div class="col-md-3">
                                        <img src="meo.jpg" class="img-fluid h-75 w-100 secondary-img" onclick="changeMainImage('meo.jpg')" />
                                    </div>
                                    <div class="col-md-3">
                                        <img src="meo.jpg" class="img-fluid h-75 w-100 secondary-img" onclick="changeMainImage('meo.jpg')" />
                                    </div>
                                </div>
                            }
                        </div>


                        @if (product != null)
                        {
                            <div class="col-md-8">
                                <h1 class="product-name">@product.Name</h1>
                                <p class="description">@product.Description1</p>
                                <div class="row">
                                    <div class="col-md-3">
                                        <p> <i class="fa-solid fa-leaf fs-5"></i> Trà</p>
                                    </div>
                                    <div class="col-md-3">
                                        <p> <i class="fa-solid fa-mug-hot fs-5"></i> Sữa</p>
                                    </div>
                                    <div class="col-md-3">
                                        <p> <i class="fa-solid fa-cake-candles fs-5"></i> Bánh kem</p>
                                    </div>
                                </div>
                                @if (product?.Size_Product != null && product.Size_Product.Any())
                                {
                                    var sizeForProduct = product.Size_Product.Where(size => size.ProductID == product.ProductID).ToList();
                                    if (sizeForProduct.Any())
                                    {
                                        var firstSize = sizeForProduct.FirstOrDefault();
                                        <h1>Giá: @firstSize.Price VNĐ</h1>
                                    }
                                }
                                <div class="size">
                                    <p>Size:</p>
                                    @foreach (var sizeProduct in product.Size_Product)
                                    {
                                        <button class="btn-size rounded-2">@sizeProduct.Size.Name</button>
                                    }
                                </div>
                                <div class="row">
                                    <div class="col-md-6 d-flex">
                                        <div class="quantity-control me-3">
                                            <button id="decreaseBtn">-</button>
                                            <input type="text" id="quantityInput" value="1" readonly>
                                            <button id="increaseBtn">+</button>
                                        </div>
                                        <div class="btn btn-black mt-30" style="width: 270px;">
                                            <i class="fa-solid fa-cart-shopping"></i> XEM SẢN PHẨM
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <p>Loading...</p>
                        }
                    </div>
                </div>
                <div class="col-md-1"></div>
            </div>
            <div class="row info-section">
                <div class="col-md-6">
                    <h3>Topping thêm</h3>
                    <div class="icon-text">
                        <span><strong>Thạch chân mèo : 10k</strong></span>
                    </div>
                    <div class="icon-text">
                        <span><strong>Chân châu đen : 10k</strong></span>
                    </div>
                    <div class="icon-text">
                        <span><strong>Pudding (Matcha, Cacao, Trứng) : 10k</strong></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <h3>Mô tả sản phẩm</h3>
                    <div class="row">
                        <div class="col-6">
                            <p><strong>Hương vị</strong><br>Ngọt vừa phải, đậm trà</p>
                        </div>
                        <div class="col-6">
                            <p><strong>Topping đi kèm</strong><br>Chân châu đen, pudding</p>
                        </div>
                        <div class="col-6">
                            <p><strong>Caffeine</strong><br>Không quá cao</p>
                        </div>
                        <div class="col-6">
                            <p><strong>Năng lượng</strong><br>100KCALO</p>
                        </div>
                    </div>
                    <hr>
                    <h3>Nguyên liệu</h3>
                    <p>Trà đen Phúc Long, bột béo, bột sữa, đường,.....</p>
                </div>
            </div>
            <div class="row same-product">
                <h2>Sản phẩm tương tự</h2>
                <div class="col-md-2"></div>
                <div class="col-md-8">
                    <div class="row">
                        @foreach (var similarProduct in similarProducts)
                        {
                            <div class="col-md-4">
                                <div class="card card-prodcut-same" style="width: 15rem;">
                                    @if (similarProduct.Image != null && similarProduct.Image.Any())
                                    {
                                        @foreach (var image in similarProduct.Image.Take(1))
                                        {
                                            <img src="@image.Name" class="card-img-top" style="width:100px; height:100px">
                                        }
                                    }
                                    else
                                    {
                                        <img src="default.jpg" class="card-img-top h-75">
                                    }
                                    <div class="card-body">
                                        <p class="card-text name">@similarProduct.Name</p>
                                        @if (product?.Size_Product != null && product.Size_Product.Any())
                                        {
                                            var sizeForProduct = product.Size_Product.Where(size => size.ProductID == product.ProductID).ToList();
                                            if (sizeForProduct.Any())
                                            {
                                                var firstSize = sizeForProduct.FirstOrDefault();
                                                <h6>Giá: @firstSize.Price VNĐ</h6>
                                            }
                                        }

                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="col-md-2"></div>
            </div>



        </div>
    </main>
    <footer>
        <!-- place footer here -->
    </footer>
    <!-- Bootstrap JavaScript Libraries -->

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.min.js"
            integrity="sha384-BBtl+eGJRgqQAUMxJ7pMwbEyER4l1g+O15P+16Ep7Q9Q+zqX6gSbd85u4mG4QzX+"
            crossorigin="anonymous"></script>
    <script>
        function changeMainImage(src) {
            document.getElementById('mainImage').src = src;
        }
    </script>

</body>

</html>


@code {
    [Parameter]
    public int ProductID { get; set; }

    private Product product;
    private List<Product> similarProducts = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        await LoadProductDetails();
        await LoadSimilarProducts();
    }

    private async Task LoadProductDetails()
    {
        string url = $"http://localhost:20714/api/Products/{ProductID}";
        var response = await httpClient.GetAsync(url);
        if (response.IsSuccessStatusCode)
        {
            var apiResponse = await response.Content.ReadAsStringAsync();
            product = JsonConvert.DeserializeObject<Product>(apiResponse);

            // Load các hình ảnh liên quan dựa trên ProductID
            string urlImage = $"http://localhost:20714/api/Images?ProductID={ProductID}";
            response = await httpClient.GetAsync(urlImage);
            if (response.IsSuccessStatusCode)
            {
                var imageResponse = await response.Content.ReadAsStringAsync();
                var images = JsonConvert.DeserializeObject<List<Image>>(imageResponse);
                product.Image = images;
            }

            // Load các kích cỡ và giá liên quan dựa trên ProductID
            string urlSizeProduct = $"http://localhost:20714/api/Size_Product?ProductID={ProductID}";
            response = await httpClient.GetAsync(urlSizeProduct);
            if (response.IsSuccessStatusCode)
            {
                var sizeProductResponse = await response.Content.ReadAsStringAsync();
                var sizeProducts = JsonConvert.DeserializeObject<List<Size_Product>>(sizeProductResponse);
                product.Size_Product = sizeProducts;
            }
        }
    }

    private async Task LoadSimilarProducts()
    {
        if (product != null)
        {
            string url = $"http://localhost:20714/api/Products?CateID={product.CateID}";
            var response = await httpClient.GetAsync(url);
            if (response.IsSuccessStatusCode)
            {
                var apiResponse = await response.Content.ReadAsStringAsync();
                var allProducts = JsonConvert.DeserializeObject<List<Product>>(apiResponse);

                // Lọc các sản phẩm có cùng CateID
                similarProducts = allProducts.Where(p => p.CateID == product.CateID).ToList();

            }
        }
    }
}