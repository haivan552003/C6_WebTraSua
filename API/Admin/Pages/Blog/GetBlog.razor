@page "/blog"

<p> <a href="CreateBlog">Thêm Bài Viết</a></p>
<div class="panel panel-primary">
    <!-- Default panel contents -->
    <div class="panel-heading"><h2>Thông tin bài viết</h2></div>

    <!-- Table -->
    <table class="table">
        <tr>
            <th>Tiêu đề</th>
            <th>Hình ảnh</th>
            <th>Khác</th>
        </tr>
        @foreach (var blogs in banner)
        {
            <tr>
                <td>@blogs.Title</td>
                <td>
                    <img src="@GetImagePath(blogs.Image)" width="100" height="100" />
                </td>
                <td>
                    <a class="btn btn-sm btn-success" href="UpdateBlog/@blogs.Id">
                        Sửa
                    </a> |
                    <button class="btn btn-sm btn-danger" @onclick="@(() => Delete(blogs.Id))">
                        Xóa
                    </button>
                </td>
            </tr>
        }
    </table>
</div>

@code {
    string imageBasePath = "http://localhost:49972/images";

    string urlBanner = "http://localhost:20714/api/Blogs";
    public string FormSubmitMessage { get; set; } = "Banner Not Created";
    public IEnumerable<Blog> banner { get; set; } = Enumerable.Empty<Blog>();


    protected async override Task OnInitializedAsync()
    {
        await CallAPI();
    }

    async Task CallAPI()
    {
        using (var httpClient = new HttpClient())
        {
            var response = await httpClient.GetAsync(urlBanner);
            var apiResponse = await response.Content.ReadAsStringAsync();
            banner = JsonConvert.DeserializeObject<List<Blog>>(apiResponse);
        }
    }

    public async Task Delete(int bannerId)
    {
        using (var httpClient = new HttpClient())
        {
            using (var response = await httpClient.DeleteAsync($"{urlBanner}/{bannerId}"))
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
            }
        }
        await CallAPI();
    }

    private string GetImagePath(string imageName) => $"{imageBasePath}/{imageName}";
}