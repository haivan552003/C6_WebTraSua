@page "/createproduct"
@using System.Text
<EditForm Model="proData" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit" FormName="CreateProduct">
    <DataAnnotationsValidator />
    <h1>Thêm Sản Phẩm</h1>
    <div class="form-group">
        <label class="font-weight-bold">Tên Sản Phẩm</label>
        <InputText class="form-control" @bind-Value="proData.Name" placeholder="Tên sản phẩm" />
        <div class="text-danger ps-3">
            <ValidationMessage For="()=>proData.Name"></ValidationMessage>
        </div>
    </div>

    <div class="form-group">
        <label class="font-weight-bold">Đánh Giá</label>
        <InputNumber class="form-control" @bind-Value="proData.Rate" placeholder="Đánh giá" />
        <div class="text-danger ps-3">
            <ValidationMessage For="()=>proData.Rate"></ValidationMessage>
        </div>
    </div>

    <div class="form-group">
        <label class="font-weight-bold">Mô Tả 1</label>
        <InputTextArea class="form-control" @bind-Value="proData.Description1" placeholder="Mô tả 1" />
        <div class="text-danger ps-3">
            <ValidationMessage For="()=>proData.Description1"></ValidationMessage>
        </div>
    </div>

    <div class="form-group">
        <label class="font-weight-bold">Mô Tả 2</label>
        <InputTextArea class="form-control" @bind-Value="proData.Description2" placeholder="Mô tả 2" />
        <div class="text-danger ps-3">
            <ValidationMessage For="()=>proData.Description2"></ValidationMessage>
        </div>
    </div>

    <div class="form-group">
        <label class="font-weight-bold">Danh Mục</label>
        <InputSelect class="form-control" @bind-Value="proData.CateID">
            @foreach (Categories item in cate)
            {
                <option value="@item.CateID">@item.Name</option>
            }
        </InputSelect>
        <div class="text-danger ps-3">
            <ValidationMessage For="()=>proData.CateID"></ValidationMessage>
        </div>
    </div>

    <div class="form-group">
        <label class="font-weight-bold">Trạng Thái</label>
        <InputSelect class="form-control" @bind-Value="proData.StatusID">
            <option value="0" selected>Hợp lệ</option>
            <option value="1">Không hợp lệ</option>
        </InputSelect>
    </div>

    <button type="submit" class="btn btn-primary">Thêm Sản Phẩm</button>
    <p class="text-success p-2 ms-auto">@FormSubmitMessage</p>
</EditForm>

@code {
    string urlPro = "http://localhost:20714/api/Products";
    string urlCate = "http://localhost:20714/api/Categories";

    public Product proData = new Product();
    Product ReceivedPro;
    public IEnumerable<Categories> cate { get; set; } = Enumerable.Empty<Categories>();
    public string FormSubmitMessage { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await Load();
    }

    private async Task Load()
    {
        using (var httpClient = new HttpClient())
        {
            using (var response = await httpClient.GetAsync(urlCate))
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
                cate = JsonConvert.DeserializeObject<List<Categories>>(apiResponse);
            }
        }
    }

    public async Task HandleValidSubmit()
    {
        ReceivedPro = new Product();
        using (var httpClient = new HttpClient())
        {
            StringContent content = new StringContent(JsonConvert.SerializeObject(proData), Encoding.UTF8, "application/json");

            using (var response = await httpClient.PostAsync(urlPro, content))
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
                if (response.IsSuccessStatusCode)
                {
                    ReceivedPro = JsonConvert.DeserializeObject<Product>(apiResponse);
                    FormSubmitMessage = "Thêm sản phẩm thành công!";
                }
                else
                {
                    FormSubmitMessage = "Thêm thất bại: " + apiResponse;
                }
            }
        }

        using (var httpClient = new HttpClient())
        {
            using (var response = await httpClient.GetAsync(urlCate))
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
                cate = JsonConvert.DeserializeObject<List<Categories>>(apiResponse);
            }
        }
    }

    public void HandleInvalidSubmit() => FormSubmitMessage = "Dữ liệu không hợp lệ, vui lòng kiểm tra lại.";

}
