@page "/EditCategoris/{id:int}"
@using System.Text

<h2 class="text-success p-2">@FormSubmitMessage</h2>
<EditForm Model="proData" OnValidSubmit="HandleValidSubmit" OnInvalidSubmit="HandleInvalidSubmit" FormName="CreateCate">
    <DataAnnotationsValidator />
    <h1>Create Category</h1>

    <div class="form-group">
        <label>Name</label>
        <InputText class="form-control" @bind-Value="proData.Name" />
        <div class="text-danger ps-3">
            <ValidationMessage For="()=>proData.Name"></ValidationMessage>
        </div>
    </div>
    <div class="form-group">
        <label>Image</label>
        <InputText class="form-control" @bind-Value="proData.Image" />
        <div class="text-danger ps-3">
            <ValidationMessage For="()=>proData.Image"></ValidationMessage>
        </div>
    </div>
    <div class="form-group">
        <div class="input-box">
            <label>Trạng Thái</label>
            <InputSelect @bind-Value="proData.Status">
                <option value="0" selected>Hợp lệ</option>
                <option value="1">Không hợp lệ</option>
            </InputSelect>
        </div>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Create</button>
    </div>
</EditForm>

@code {
   
    string urlCate = "http://localhost:20714/api/Categories";
    public Categories proData = new Categories();
    Categories ReceivedBlog;
        public string FormSubmitMessage { get; set; } = string.Empty;

        [Parameter]
        public int Id { get; set; }
    protected async override Task OnParametersSetAsync()
    {
        using (var httpClient = new HttpClient())
        {
            using (var response = await httpClient.GetAsync($"{urlCate}/{Id}"))
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
                var categoriesList = JsonConvert.DeserializeObject<List<Categories>>(apiResponse);
                proData = categoriesList.FirstOrDefault(c => c.CateID == Id);
            }
        }
    }

        public async Task HandleValidSubmit()
        {
        ReceivedBlog = new Categories();
            using (var httpClient = new HttpClient())
            {
            var jsonContent = new StringContent(JsonConvert.SerializeObject(proData), Encoding.UTF8, "application/json");

            using (var response = await httpClient.PutAsync($"{urlCate}/{proData.CateID}", jsonContent))
                {
                    string apiResponse = await response.Content.ReadAsStringAsync();
                    if (response.IsSuccessStatusCode)
                    {
                        ReceivedBlog = JsonConvert.DeserializeObject<Categories>(apiResponse);
                        FormSubmitMessage = "Sửa blog thành công !";
                    }
                    else
                    {
                        FormSubmitMessage = "Sửa thất bại: " + apiResponse;
                    }
                }
            }
        }

        public void HandleInvalidSubmit() => FormSubmitMessage = "Dữ liệu không hợp lệ, vui lòng kiểm tra lại.";
    }
