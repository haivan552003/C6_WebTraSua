@page "/CreateBanner"
@using System.Text
<link href="/validation.css" rel="stylesheet" />

<h1 class="bg-info text-white">Create Reservation</h1>
<h2 class="text-success p-2">@FormSubmitMessage</h2>

<EditForm Model="bannerData" OnValidSubmit="CreateeeBanner" OnInvalidSubmit="CreateeBanner">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label>Image</label>
        <ValidationMessage For="@(() => bannerData.Image)" />
        <InputText class="form-control" @bind-Value="bannerData.Image" />
    </div>
    <div class="form-group">
        <label>Title</label>
        <ValidationMessage For="@(() => bannerData.Title)" />
        <InputText class="form-control" @bind-Value="bannerData.Title" />
    </div>
    <div class="form-group">
        <label>Status</label>
        <ValidationMessage For="@(() => bannerData.Status)" />
        <InputNumber class="form-control" @bind-Value="bannerData.Status" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Click</button>

    </div>
</EditForm>

@code {

    public Banner bannerData = new Banner();
    Banner banner;
    public string FormSubmitMessage { get; set; } = "Reservation Not Created";

    public async Task CreateeeBanner()
    {
        banner = new Banner();
        using (var httpClient = new HttpClient())
        {
            StringContent content = new StringContent(JsonConvert.SerializeObject(bannerData), Encoding.UTF8, "application/json");

            using (var response = await httpClient.PostAsync("http://localhost:20714/api/Banners", content))
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
                banner = JsonConvert.DeserializeObject<Banner>(apiResponse);
            }
        }
        FormSubmitMessage = "Banner Created";
    }

    public void CreateeBanner() => FormSubmitMessage = "Invalid Banner";

}