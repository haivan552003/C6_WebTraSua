@page "/CreateBanner"
@using System.Text
@inject IJSRuntime jsRuntime

<EditForm Model="bannerData" OnValidSubmit="CreateeeBanner">
    <DataAnnotationsValidator />
    <h1>Thêm bảng hiệu</h1>

    <div class="form-group">
        <label class="font-weight-bold">Tiêu đề</label>
        <InputText class="form-control" @bind-Value="bannerData.Title" />
        <div class="text-danger ps-3">
            <ValidationMessage For="()=>bannerData.Title"></ValidationMessage>
        </div>
    </div>
    <div class="form-group">
        <label>Hình Ảnh</label>
        <InputFile OnChange="ChangeHandler" />
        <div class="text-danger ps-3">
            <ValidationMessage For="()=>bannerData.Image"></ValidationMessage>
        </div>
    </div>
    <div class="form-group">
        <label class="font-weight-bold">Trạng thái</label>
        <InputSelect class="form-control" @bind-Value="bannerData.Status">
            <option value="0" selected>Hợp lệ</option>
            <option value="1">Không hợp lệ</option>
        </InputSelect>

        <div class="text-danger ps-3">
            <ValidationMessage For="()=>bannerData.Status">

            </ValidationMessage>
        </div>
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Thêm Bảng Hiệu</button>
    </div>
    <p class="text-success p-2 ms-auto">@FormSubmitMessage</p>

</EditForm>


@code {
    string url = "http://localhost:20714/api/Banners/UploadFile";
    private Banner bannerData = new Banner();
    public string FormSubmitMessage { get; set; } = null;
    public string apiResponse { get; set; }
    public IBrowserFile F;

    private bool IsLoggedIn = false;
    private int RoleID = 0;

    protected async override Task OnInitializedAsync()
    {
        await GetSession();
    }

    private void ChangeHandler(InputFileChangeEventArgs e)
    {
        F = e.File;
    }

    public async Task CreateeeBanner()
    {
        if (F != null)
        {
            using (var ms = F.OpenReadStream(968435456))
            {
                var content = new MultipartFormDataContent();
                content.Add(new StreamContent(ms), "file", F.Name);
                content.Add(new StringContent(bannerData.Title.ToString()), "title");
                content.Add(new StringContent(bannerData.Status.ToString()), "status");

                using (var httpClient = new HttpClient())
                {
                    var response = await httpClient.PostAsync(url, content);
                    response.EnsureSuccessStatusCode();
                    apiResponse = await response.Content.ReadAsStringAsync();
                    FormSubmitMessage = "Thêm thành công";
                }
            }
        }
        else
        {
            apiResponse = "Vui lòng chọn hình ảnh";
        }
    }

    private async Task GetSession()
    {
        var userInfoJson = await jsRuntime.InvokeAsync<string>("sessionStorage.getItem", "userSession");
        if (!string.IsNullOrEmpty(userInfoJson))
        {
            var userInfo = JsonConvert.DeserializeObject<UserLogin>(userInfoJson);
            if (userInfo != null)
            {
                IsLoggedIn = true;
                RoleID = userInfo.RoleID;
            }
        }
    }

}
